<?php

namespace Fifth\Generator\Commands\ModelCommands;

use Fifth\Generator\Commands\MainMakeCommand;
use Fifth\Generator\Console\Commands\Fragments\HasFields;
use Fifth\Generator\Console\Commands\ModelCommands\Classes\ModelField;
use Fifth\Generator\Console\Commands\ModelCommands\Classes\RelationGenerators\RelationManager;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Str;
use Symfony\Component\Console\Input\InputOption;

class ModelMakeCommand extends MainMakeCommand
{
    use HasFields;

    protected $name = 'fifth:model';

    protected $type = 'Model';

    protected $relationFragmentData;

    protected function getStub()
    {
        return __DIR__.'/stubs/model.stub';
    }


    public function handle()
    {
        $this->setFields();

        $this->handleRelations();

        $this->createFragments();

        $this->createMigration();

//        $this->modelCreated();

        parent::handle();
    }

    private function handleRelations()
    {
        $relationManager = (new RelationManager(json_decode($this->option('relations'), true)));
        $relationManager->handle();

        $this->relationFragmentData = $relationManager->getRelationFragmentData();

        $this->fields = array_merge($this->fields, ...$relationManager->getRelationFields());
    }

    private function createFragments()
    {
        foreach ($this->getDefaultFragmentNames() as $fragment) {
            Artisan::call('fifth:modelFragment', [
                'name'       => $this->argument('name'),
                '--fragment' => $fragment
            ]);
        }
    }

    protected function createMigration()
    {
        $table = Str::snake(Str::plural(class_basename($this->argument('name'))));

        $this->call('fifth:migration', [
            'name' => "create_{$table}_table",
            '--create' => $table,
            '--fields' => $this->getImplodedFields(),
            '--withTimestamps' => $this->option('withTimestamps')
        ]);
    }
//
//    private function modelCreated()
//    {
//        $fifthModel = FifthModel::create([
//            'name' => $this->argument('name'),
//            'withTimestamps' => !!$this->option('withTimestamps')
//        ]);
//
//        foreach ($this->fields as $field) {
//            FifthModelField::create(array_merge(get_object_vars($field), [
//                'fifth_model_id' => $fifthModel->id,
//            ]));
//        }
//
//    }

    private function getDefaultFragmentNames()
    {
        return ['Relations', 'Scopes'];
    }

    protected function getClassName()
    {
        return $this->getNameInput();
    }

    protected function getDefaultNamespace($rootNamespace)
    {
        return parent::getDefaultNamespace($rootNamespace) . '\\Models'; // TODO: Change the autogenerated stub
    }

    protected function workoutReplaceableVariables(): array
    {
        return [
            'FILLABLES' => $this->getFillablesStr(),
        ];
    }

    private function getFillablesStr()
    {
        $fillables = array_filter($this->fields, function (ModelField $field) {
            return $field->fillable;
        });

        return join(', ', array_map(function (ModelField $field) {
            return "'$field->name'";
        }, $fillables));
    }

    protected function getOptions()
    {
        return [
            ['fields', 'f', InputOption::VALUE_NONE, 'model fields'],
            ['withTimestamps', 't', InputOption::VALUE_NONE, 'with timestamps'],
            ['relations', 'r', InputOption::VALUE_NONE, 'relations'],
        ];
    }
}
